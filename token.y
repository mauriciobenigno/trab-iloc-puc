%{
#include <stdio.h>
#include "scanner.flex.h"
%}
%token NOP 
%token AND ANDI OR ORI XOR XORI
%token ADD SUB DIV MULT ADDI MULTI SUBI RSUBI DIVI RDIVI
%token LSHIFT LSHIFTI RSHIFT RSHIFTI
%token LOAD LOADAI LOADAO CLOAD CLOADAI CLOADAO LOADI
%token STORE STOREAI STOREAO CSTORE CSTOREAI CSTOREAO
%token I2I C2C C2I I2C
%token CMP_LT CMP_LE CMP_EQ CMP_GE CMP_GT CMP_NE CBR
%token CCMP CBR_LT CBR_LE CBR_EQ CBR_GE CBR_GT CBR_NE
%token JUMPI JUMP TBL
%token NUMBER
%token REGISTER
%token LABEL
%token CC
%token PC
%token VIRGULA
%%

lista_instrucoes: instrucao lista_instrucoes
|
;

instrucao:	ADDI REGISTER VIRGULA NUMBER VIRGULA REGISTER {$6 = $2+$4;}
| SUBI REGISTER VIRGULA NUMBER VIRGULA REGISTER {$6 = $2-$4;}
| MULTI REGISTER VIRGULA NUMBER VIRGULA REGISTER {$6 = $2*$4;}
| DIVI REGISTER VIRGULA NUMBER VIRGULA REGISTER {$6 = $2/$4;}
| LSHIFTI REGISTER VIRGULA NUMBER VIRGULA REGISTER
| RSHIFTI REGISTER VIRGULA NUMBER VIRGULA REGISTER
| ANDI REGISTER VIRGULA NUMBER VIRGULA REGISTER
| ORI REGISTER VIRGULA NUMBER VIRGULA REGISTER
| XORI REGISTER VIRGULA NUMBER VIRGULA REGISTER
| RSUBI REGISTER VIRGULA NUMBER VIRGULA REGISTER {$6 = $4-$2;}
| RDIVI REGISTER VIRGULA NUMBER VIRGULA REGISTER {$6 = $4/$2;}
| LOADI NUMBER VIRGULA REGISTER {$4 = $2;}
| ADD REGISTER VIRGULA REGISTER VIRGULA REGISTER {$6 = $2+$4;}
| SUB REGISTER VIRGULA REGISTER VIRGULA REGISTER {$6 = $2-$4;}
| MULT REGISTER VIRGULA REGISTER VIRGULA REGISTER {$6 = $2*$4;}
| DIV REGISTER VIRGULA REGISTER VIRGULA REGISTER {$6 = $2/$4;}
| LSHIFT REGISTER VIRGULA REGISTER VIRGULA REGISTER
| RSHIFT REGISTER VIRGULA REGISTER VIRGULA REGISTER
| AND REGISTER VIRGULA REGISTER VIRGULA REGISTER
| OR REGISTER VIRGULA REGISTER VIRGULA REGISTER
| XOR REGISTER VIRGULA REGISTER VIRGULA REGISTER
| LOAD REGISTER VIRGULA REGISTER /* Puxar da Hash d memoria */
| LOADAI REGISTER VIRGULA NUMBER VIRGULA REGISTER /* Puxar da Hash d memoria */
| LOADAO REGISTER VIRGULA REGISTER VIRGULA REGISTER /* Puxar da Hash d memoria */
| CLOAD CC VIRGULA REGISTER /* Puxar da Hash d memoria */
| CLOADAI REGISTER VIRGULA CC VIRGULA REGISTER /* Puxar da Hash d memoria */
| CLOADAO REGISTER VIRGULA REGISTER VIRGULA REGISTER /* Puxar da Hash d memoria */
| STORE REGISTER VIRGULA REGISTER /* Criar um hash para usar como memoria*/
| STOREAI REGISTER VIRGULA NUMBER VIRGULA REGISTER /* Memoria */
| STOREAO REGISTER VIRGULA REGISTER /* Memoria */
| CSTORE REGISTER VIRGULA REGISTER VIRGULA REGISTER /* Memoria */
| CSTOREAI REGISTER VIRGULA NUMBER VIRGULA REGISTER /* Memoria */
| CSTOREAO REGISTER VIRGULA REGISTER VIRGULA REGISTER /* Memoria */
| I2I REGISTER VIRGULA REGISTER {$4 = $2;}
| C2C REGISTER VIRGULA REGISTER {$4 = $2;}
| C2I REGISTER VIRGULA REGISTER {$4 = $2;}
| I2C REGISTER VIRGULA REGISTER {$4 = $2;}
| CMP_LT REGISTER VIRGULA REGISTER VIRGULA REGISTER { if($2<$4) {$6=true} else {$6=false} }
| CMP_LE REGISTER VIRGULA REGISTER VIRGULA REGISTER { if($2<=$4) {$6=true} else {$6=false} }
| CMP_EQ REGISTER VIRGULA REGISTER VIRGULA REGISTER { if($2==$4) {$6=true} else {$6=false} }
| CMP_GE REGISTER VIRGULA REGISTER VIRGULA REGISTER { if($2>=$4) {$6=true} else {$6=false} }
| CMP_GT REGISTER VIRGULA REGISTER VIRGULA REGISTER { if($2>$4) {$6=true} else {$6=false} }
| CMP_NE REGISTER VIRGULA REGISTER VIRGULA REGISTER { if($2!=$4) {$6=true} else {$6=false} }
| CBR REGISTER VIRGULA LABEL VIRGULA LABEL VIRGULA PC{ if($2==true) {$8=$4} else {$8=$6} }
| CCMP REGISTER VIRGULA REGISTER VIRGULA CC
| CBR_LT CC VIRGULA LABEL VIRGULA LABEL 
| CBR_LE CC VIRGULA LABEL VIRGULA LABEL 
| CBR_EQ CC VIRGULA LABEL VIRGULA LABEL 
| CBR_GE CC VIRGULA LABEL VIRGULA LABEL 
| CBR_GT CC VIRGULA LABEL VIRGULA LABEL 
| CBR_NE CC VIRGULA LABEL VIRGULA LABEL 
| JUMP LABEL VIRGULA PC {$4=$2;}
| JUMPI REGISTER VIRGULA PC {$4=$2;}
| TBL REGISTER VIRGULA LABEL 
;

%%
main(int argc, char **argv)
{
	yyparse();
}

yyerror(char *s)
{
	fprintf(stderr, "error: %s\n", s);
}
